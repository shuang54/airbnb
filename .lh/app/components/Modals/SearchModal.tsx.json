{
    "sourceFile": "app/components/Modals/SearchModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1685255879494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685256179538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,17 @@\n+import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n+import Modal from \"./Modal\";\r\n+\r\n const SearchModal = () => {\r\n+  const searchModal = useSearchModal();\r\n   return ( \r\n-    <div>SearchModal</div>\r\n+    <Modal\r\n+      isOpen={searchModal.isOpen}\r\n+      onClose={searchModal.onClose}\r\n+      onSubmit={searchModal.onOpen}\r\n+      title=\"Filters\"\r\n+      actionLabel=\"Search\"\r\n+    />\r\n    );\r\n }\r\n  \r\n export default SearchModal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685256677868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,16 @@\n import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n import Modal from \"./Modal\";\r\n+import { useRouter, useSearchParams } from \"next/navigation\";\r\n \r\n+enum STEPS {\r\n+  LOCATION = 0,\r\n+  DATE = 1,\r\n+  INFO = 2\r\n+}\r\n const SearchModal = () => {\r\n+  const router = useRouter();\r\n+  const params = useSearchParams();\r\n   const searchModal = useSearchModal();\r\n   return ( \r\n     <Modal\r\n       isOpen={searchModal.isOpen}\r\n"
                },
                {
                    "date": 1685256803992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n import Modal from \"./Modal\";\r\n import { useRouter, useSearchParams } from \"next/navigation\";\r\n+import { useState } from \"react\";\r\n+import { Range } from \"react-date-range\";\r\n \r\n enum STEPS {\r\n   LOCATION = 0,\r\n   DATE = 1,\r\n@@ -10,8 +12,18 @@\n const SearchModal = () => {\r\n   const router = useRouter();\r\n   const params = useSearchParams();\r\n   const searchModal = useSearchModal();\r\n+\r\n+  const [step,setStep] = useState(STEPS.LOCATION);\r\n+  const [guestCount, setGuestCount] = useState(1);\r\n+  const [roomCount, setRoomCount] = useState(1);\r\n+  const [bathroomCount, setBathroomCount] = useState(1);\r\n+  const [dateRange, setDateRange] = useState<Range>({\r\n+    startDate: new Date(),\r\n+    endDate: new Date(),\r\n+    key: 'selection'\r\n+  })\r\n   return ( \r\n     <Modal\r\n       isOpen={searchModal.isOpen}\r\n       onClose={searchModal.onClose}\r\n"
                },
                {
                    "date": 1685256855895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n import Modal from \"./Modal\";\r\n import { useRouter, useSearchParams } from \"next/navigation\";\r\n-import { useState } from \"react\";\r\n+import { useMemo, useState } from \"react\";\r\n import { Range } from \"react-date-range\";\r\n+import dynamic from \"next/dynamic\";\r\n \r\n enum STEPS {\r\n   LOCATION = 0,\r\n   DATE = 1,\r\n@@ -22,8 +23,10 @@\n     startDate: new Date(),\r\n     endDate: new Date(),\r\n     key: 'selection'\r\n   })\r\n+\r\n+  const Map = useMemo(()=> dynamic(()=> import('')))\r\n   return ( \r\n     <Modal\r\n       isOpen={searchModal.isOpen}\r\n       onClose={searchModal.onClose}\r\n"
                },
                {
                    "date": 1685256899116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n     endDate: new Date(),\r\n     key: 'selection'\r\n   })\r\n \r\n-  const Map = useMemo(()=> dynamic(()=> import('')))\r\n+  const Map = useMemo(()=> dynamic(()=> import('../Map'),{\r\n+    ssr:false\r\n+  }),[location])\r\n   return ( \r\n     <Modal\r\n       isOpen={searchModal.isOpen}\r\n       onClose={searchModal.onClose}\r\n"
                },
                {
                    "date": 1685256923200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,198 @@\n-import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n+'use client';\r\n+\r\n+import qs from 'query-string';\r\n+import dynamic from 'next/dynamic'\r\n+import { useCallback, useMemo, useState } from \"react\";\r\n+import { Range } from 'react-date-range';\r\n+import { formatISO } from 'date-fns';\r\n+import { useRouter, useSearchParams } from 'next/navigation';\r\n+\r\n+import useSearchModal from \"@/app/hooks/useSearchModal\";\r\n+\r\n import Modal from \"./Modal\";\r\n-import { useRouter, useSearchParams } from \"next/navigation\";\r\n-import { useMemo, useState } from \"react\";\r\n-import { Range } from \"react-date-range\";\r\n-import dynamic from \"next/dynamic\";\r\n+import Calendar from \"../inputs/Calendar\";\r\n+import Counter from \"../inputs/Counter\";\r\n+import CountrySelect, {\r\n+  CountrySelectValue\r\n+} from \"../inputs/CountrySelect\";\r\n+import Heading from '../Heading';\r\n \r\n enum STEPS {\r\n   LOCATION = 0,\r\n   DATE = 1,\r\n-  INFO = 2\r\n+  INFO = 2,\r\n }\r\n+\r\n const SearchModal = () => {\r\n   const router = useRouter();\r\n+  const searchModal = useSearchModal();\r\n   const params = useSearchParams();\r\n-  const searchModal = useSearchModal();\r\n \r\n-  const [step,setStep] = useState(STEPS.LOCATION);\r\n+  const [step, setStep] = useState(STEPS.LOCATION);\r\n+\r\n+  const [location, setLocation] = useState<CountrySelectValue>();\r\n   const [guestCount, setGuestCount] = useState(1);\r\n   const [roomCount, setRoomCount] = useState(1);\r\n   const [bathroomCount, setBathroomCount] = useState(1);\r\n   const [dateRange, setDateRange] = useState<Range>({\r\n     startDate: new Date(),\r\n     endDate: new Date(),\r\n     key: 'selection'\r\n-  })\r\n+  });\r\n \r\n-  const Map = useMemo(()=> dynamic(()=> import('../Map'),{\r\n-    ssr:false\r\n-  }),[location])\r\n-  return ( \r\n+  const Map = useMemo(() => dynamic(() => import('../Map'), {\r\n+    ssr: false\r\n+  }), [location]);\r\n+\r\n+  const onBack = useCallback(() => {\r\n+    setStep((value) => value - 1);\r\n+  }, []);\r\n+\r\n+  const onNext = useCallback(() => {\r\n+    setStep((value) => value + 1);\r\n+  }, []);\r\n+\r\n+  const onSubmit = useCallback(async () => {\r\n+    if (step !== STEPS.INFO) {\r\n+      return onNext();\r\n+    }\r\n+\r\n+    let currentQuery = {};\r\n+\r\n+    if (params) {\r\n+      currentQuery = qs.parse(params.toString())\r\n+    }\r\n+\r\n+    const updatedQuery: any = {\r\n+      ...currentQuery,\r\n+      locationValue: location?.value,\r\n+      guestCount,\r\n+      roomCount,\r\n+      bathroomCount\r\n+    };\r\n+\r\n+    if (dateRange.startDate) {\r\n+      updatedQuery.startDate = formatISO(dateRange.startDate);\r\n+    }\r\n+\r\n+    if (dateRange.endDate) {\r\n+      updatedQuery.endDate = formatISO(dateRange.endDate);\r\n+    }\r\n+\r\n+    const url = qs.stringifyUrl({\r\n+      url: '/',\r\n+      query: updatedQuery,\r\n+    }, { skipNull: true });\r\n+\r\n+    setStep(STEPS.LOCATION);\r\n+    searchModal.onClose();\r\n+    router.push(url);\r\n+  },\r\n+    [\r\n+      step,\r\n+      searchModal,\r\n+      location,\r\n+      router,\r\n+      guestCount,\r\n+      roomCount,\r\n+      dateRange,\r\n+      onNext,\r\n+      bathroomCount,\r\n+      params\r\n+    ]);\r\n+\r\n+  const actionLabel = useMemo(() => {\r\n+    if (step === STEPS.INFO) {\r\n+      return 'Search'\r\n+    }\r\n+\r\n+    return 'Next'\r\n+  }, [step]);\r\n+\r\n+  const secondaryActionLabel = useMemo(() => {\r\n+    if (step === STEPS.LOCATION) {\r\n+      return undefined\r\n+    }\r\n+\r\n+    return 'Back'\r\n+  }, [step]);\r\n+\r\n+  let bodyContent = (\r\n+    <div className=\"flex flex-col gap-8\">\r\n+      <Heading\r\n+        title=\"Where do you wanna go?\"\r\n+        subtitle=\"Find the perfect location!\"\r\n+      />\r\n+      <CountrySelect\r\n+        value={location}\r\n+        onChange={(value) =>\r\n+          setLocation(value as CountrySelectValue)}\r\n+      />\r\n+      <hr />\r\n+      <Map center={location?.latlng} />\r\n+    </div>\r\n+  )\r\n+\r\n+  if (step === STEPS.DATE) {\r\n+    bodyContent = (\r\n+      <div className=\"flex flex-col gap-8\">\r\n+        <Heading\r\n+          title=\"When do you plan to go?\"\r\n+          subtitle=\"Make sure everyone is free!\"\r\n+        />\r\n+        <Calendar\r\n+          onChange={(value) => setDateRange(value.selection)}\r\n+          value={dateRange}\r\n+        />\r\n+      </div>\r\n+    )\r\n+  }\r\n+\r\n+  if (step === STEPS.INFO) {\r\n+    bodyContent = (\r\n+      <div className=\"flex flex-col gap-8\">\r\n+        <Heading\r\n+          title=\"More information\"\r\n+          subtitle=\"Find your perfect place!\"\r\n+        />\r\n+        <Counter\r\n+          onChange={(value) => setGuestCount(value)}\r\n+          value={guestCount}\r\n+          title=\"Guests\"\r\n+          subtitle=\"How many guests are coming?\"\r\n+        />\r\n+        <hr />\r\n+        <Counter\r\n+          onChange={(value) => setRoomCount(value)}\r\n+          value={roomCount}\r\n+          title=\"Rooms\"\r\n+          subtitle=\"How many rooms do you need?\"\r\n+        />\r\n+        <hr />\r\n+        <Counter\r\n+          onChange={(value) => {\r\n+            setBathroomCount(value)\r\n+          }}\r\n+          value={bathroomCount}\r\n+          title=\"Bathrooms\"\r\n+          subtitle=\"How many bahtrooms do you need?\"\r\n+        />\r\n+      </div>\r\n+    )\r\n+  }\r\n+\r\n+  return (\r\n     <Modal\r\n       isOpen={searchModal.isOpen}\r\n+      title=\"Filters\"\r\n+      actionLabel={actionLabel}\r\n+      onSubmit={onSubmit}\r\n+      secondaryActionLabel={secondaryActionLabel}\r\n+      secondaryAction={step === STEPS.LOCATION ? undefined : onBack}\r\n       onClose={searchModal.onClose}\r\n-      onSubmit={searchModal.onOpen}\r\n-      title=\"Filters\"\r\n-      actionLabel=\"Search\"\r\n+      body={bodyContent}\r\n     />\r\n-   );\r\n+  );\r\n }\r\n- \r\n+\r\n export default SearchModal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685257035800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,13 +9,11 @@\n \r\n import useSearchModal from \"@/app/hooks/useSearchModal\";\r\n \r\n import Modal from \"./Modal\";\r\n-import Calendar from \"../inputs/Calendar\";\r\n-import Counter from \"../inputs/Counter\";\r\n-import CountrySelect, {\r\n-  CountrySelectValue\r\n-} from \"../inputs/CountrySelect\";\r\n+import Calendar from '../Inputs/Calendar';\r\n+import Counter from '../inputs/Counter';\r\n+import CountrySelect from '../inputs/CountrySelect';\r\n import Heading from '../Heading';\r\n \r\n enum STEPS {\r\n   LOCATION = 0,\r\n"
                },
                {
                    "date": 1685257232164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,14 @@\n import { Range } from 'react-date-range';\r\n import { formatISO } from 'date-fns';\r\n import { useRouter, useSearchParams } from 'next/navigation';\r\n \r\n-import useSearchModal from \"@/app/hooks/useSearchModal\";\r\n+import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n \r\n import Modal from \"./Modal\";\r\n import Calendar from '../Inputs/Calendar';\r\n-import Counter from '../inputs/Counter';\r\n-import CountrySelect from '../inputs/CountrySelect';\r\n+import Counter from '../Inputs/Counter';\r\n+import CountrySelect from '../Inputs/CountrySelect';\r\n import Heading from '../Heading';\r\n \r\n enum STEPS {\r\n   LOCATION = 0,\r\n"
                },
                {
                    "date": 1685262141897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { formatISO } from 'date-fns';\r\n import { useRouter, useSearchParams } from 'next/navigation';\r\n \r\n import useSearchModal from \"@/app/Hooks/useSearchModal\";\r\n-\r\n+import { CountrySelectValue } from '../Inputs/CountrySelect';\r\n import Modal from \"./Modal\";\r\n import Calendar from '../Inputs/Calendar';\r\n import Counter from '../Inputs/Counter';\r\n import CountrySelect from '../Inputs/CountrySelect';\r\n"
                }
            ],
            "date": 1685255879494,
            "name": "Commit-0",
            "content": "const SearchModal = () => {\r\n  return ( \r\n    <div>SearchModal</div>\r\n   );\r\n}\r\n \r\nexport default SearchModal;"
        }
    ]
}