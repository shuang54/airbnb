{
    "sourceFile": "app/actions/getListingById.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1685171427515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1685171427515,
            "name": "Commit-0",
            "content": "import prisma from \"@/app/libs/prismadb\"\r\ninterface IParams {\r\n  listingId?: string;\r\n}\r\n\r\nexport default async function getListingById(\r\n  params: IParams\r\n) {\r\n  try {\r\n    const { listingId } = params;\r\n    const listing = await prisma.listing.findUnique({\r\n      where: {\r\n        id: listingId,\r\n      },\r\n      include: {\r\n        user: true\r\n      }\r\n    });\r\n\r\n    if(!listing){\r\n      return null;\r\n    }\r\n    return {\r\n      ...listing,\r\n      createdAt: listing.createdAt.toISOString(),\r\n      user: {\r\n        ...listing.user,\r\n        createdAt: listing.user.createdAt.toString(),\r\n        updatedAt: listing.user.updatedAt.toString(),\r\n        emailVerified: listing.user.emailVerified?.toString() || null,\r\n      }\r\n    }\r\n  } catch (error: any) {\r\n    throw new Error(error);\r\n  }\r\n}"
        }
    ]
}