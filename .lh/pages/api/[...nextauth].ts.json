{
    "sourceFile": "pages/api/[...nextauth].ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1684712703689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1684712728964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,8 @@\n+import bcrypt from 'bcrypt'\r\n+import NextAuth, { AuthOptions } from 'next-auth'\r\n\\ No newline at end of file\n+import CredentialsProvider from 'next-auth/providers/credentials'\r\n+import GithubProvider from 'next-auth/providers/github'\r\n+import GoogleProvider from 'next-auth/providers/google'\r\n+import { PrismaAdapter } from '@next-auth/prisma-adapter'\r\n \r\n-export const authOptions\n+export const AuthOptions\r\n"
                },
                {
                    "date": 1684712835141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,6 +3,9 @@\n import CredentialsProvider from 'next-auth/providers/credentials'\r\n import GithubProvider from 'next-auth/providers/github'\r\n import GoogleProvider from 'next-auth/providers/google'\r\n import { PrismaAdapter } from '@next-auth/prisma-adapter'\r\n+import prisma from '../../app/libs/prismadb'\r\n \r\n\\ No newline at end of file\n-export const AuthOptions\n+export const authOptions: AuthOptions = {\r\n+  adapter: PrismaAdapter(prisma)\r\n+}\r\n"
                },
                {
                    "date": 1684713121402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,6 +6,28 @@\n import { PrismaAdapter } from '@next-auth/prisma-adapter'\r\n import prisma from '../../app/libs/prismadb'\r\n \r\n export const authOptions: AuthOptions = {\r\n-  adapter: PrismaAdapter(prisma)\r\n-}\n\\ No newline at end of file\n+  adapter: PrismaAdapter(prisma),\r\n+  providers: [\r\n+    GithubProvider({\r\n+      clientId: process.env.GITHUB_ID as string,\r\n+      clientSecret: process.env.GITHUB_SECRET as string\r\n+    }),\r\n+    GoogleProvider({\r\n+      clientId: process.env.GOOGLE_CLIENT_ID as string,\r\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET as string\r\n+    }),\r\n+    CredentialsProvider({\r\n+      name: 'credentials',\r\n+      credentials: {\r\n+        email: { label: 'email', type: 'text' },\r\n+        password: { label: 'password', type: 'password' }\r\n+      },\r\n+      async authorize(credentials) {\r\n+        if (!credentials?.email || !credentials?.password) {\r\n+          throw new Error('Invalid credentials')\r\n+        }\r\n+      }\r\n+    })\r\n+  ]\r\n+}\r\n"
                },
                {
                    "date": 1684713443088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,32 @@\n         email: { label: 'email', type: 'text' },\r\n         password: { label: 'password', type: 'password' }\r\n       },\r\n       async authorize(credentials) {\r\n+        // 判断用户是否输入邮箱和密码\r\n         if (!credentials?.email || !credentials?.password) {\r\n           throw new Error('Invalid credentials')\r\n         }\r\n+\r\n+        const user = await prisma.user.findUnique({\r\n+          where: {\r\n+            email: credentials.email\r\n+          }\r\n+        })\r\n+\r\n+        if(!user || !user?.hashedPassword){\r\n+          throw new Error('Invalid credentials')\r\n+        }\r\n+\r\n+        const isCorrectPassword = await bcrypt.compare(\r\n+          credentials.password,\r\n+          user.hashedPassword\r\n+        );\r\n+\r\n+        if(isCorrectPassword){\r\n+          throw new Error('Invalid credentials')\r\n+        }\r\n+        return user;\r\n       }\r\n     })\r\n   ]\r\n }\r\n"
                },
                {
                    "date": 1684713464432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,6 +49,7 @@\n         }\r\n         return user;\r\n       }\r\n     })\r\n-  ]\r\n+  ],\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1684713628662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,6 +50,15 @@\n         return user;\r\n       }\r\n     })\r\n   ],\r\n-  \r\n+  pages: {\r\n+    signIn: '/'\r\n+  },\r\n+  debug: process.env.NODE_ENV === 'development',\r\n+  session: {\r\n+    strategy: 'jwt'\r\n+  },\r\n+  secret: process.env.NEXTAUTH_SECRET,\r\n }\r\n+\r\n+export default NextAuth;\r\n"
                },
                {
                    "date": 1684713640665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,5 +60,5 @@\n   },\r\n   secret: process.env.NEXTAUTH_SECRET,\r\n }\r\n \r\n-export default NextAuth;\r\n+export default NextAuth(authOptions);\r\n"
                }
            ],
            "date": 1684712703689,
            "name": "Commit-0",
            "content": "\r\nexport const authOptions"
        }
    ]
}